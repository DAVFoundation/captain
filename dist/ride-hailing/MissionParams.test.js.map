{"version":3,"sources":["../src/ride-hailing/MissionParams.test.ts"],"names":[],"mappings":";;AAAA,mDAA4C;AAE5C,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,aAA4B,CAAC;IACjC,IAAI,uBAA4B,CAAC;IAEjC,UAAU,CAAC,GAAG,EAAE;QACd,aAAa,GAAG,IAAI,uBAAa,CAAC,EAAE,CAAC,CAAC;QAEtC,uBAAuB,GAAG;YACxB,GAAG,EAAE,SAAS;YACd,QAAQ,EAAE,cAAc;YACxB,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,SAAS;YAChB,SAAS,EAAE,SAAS;SACrB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;YAC/E,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;YAChD,MAAM,mBAAmB,GAAG,IAAI,uBAAa,EAAE,CAAC;YAChD,mBAAmB,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;YACzD,MAAM,CAAC,mBAAmB,CAAC,CAAC,cAAc,CAAC,uBAAa,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,mBAAmB,GAAG,IAAI,uBAAa,CAAC,EAAE,CAAC,CAAC;YAClD,mBAAmB,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;YACzD,MAAM,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"MissionParams.test.js","sourcesContent":["import MissionParams from './MissionParams';\n\ndescribe('MissionParams class', () => {\n  let missionParams: MissionParams;\n  let serializedMissionParams: any;\n\n  beforeEach(() => {\n    missionParams = new MissionParams({});\n\n    serializedMissionParams = {\n      ttl: undefined,\n      protocol: 'ride_hailing',\n      type: 'mission',\n      price: undefined,\n      vehicleId: undefined,\n    };\n  });\n\n  describe('serialize method', () => {\n    it('should return serialized MissionParams object with the current values', () => {\n      expect(missionParams.serialize()).toEqual(serializedMissionParams);\n    });\n  });\n\n  describe('deserialize method', () => {\n    it('should return a MissionParams instance', () => {\n      const missionParamsObject = new MissionParams();\n      missionParamsObject.deserialize(serializedMissionParams);\n      expect(missionParamsObject).toBeInstanceOf(MissionParams);\n    });\n\n    it('should return a correct MissionParams object', () => {\n      const missionParamsObject = new MissionParams({});\n      missionParamsObject.deserialize(serializedMissionParams);\n      expect(missionParamsObject).toEqual(missionParams);\n    });\n  });\n});\n"]}