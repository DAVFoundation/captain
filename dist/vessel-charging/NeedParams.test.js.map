{"version":3,"sources":["../src/vessel-charging/NeedParams.test.ts"],"names":[],"mappings":";;AAAA,6CAAsC;AACtC,mCAAmD;AAEnD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,MAAM,UAAU,GAAG,IAAI,oBAAU,CAAC;QAChC,QAAQ,EAAE;YACR,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;SAChB;QACD,OAAO,EAAE,aAAa;QACtB,UAAU,EAAE;YACV,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,CAAC;SACV;QACD,eAAe,EAAE,EAAE;QACnB,oBAAoB,EAAE,EAAE;QACxB,YAAY,EAAE,qBAAa,CAAC,KAAK;QACjC,SAAS,EAAE,CAAC,iBAAS,CAAC,IAAI,CAAC;KAC5B,CAAC,CAAC;IACH,UAAU,CAAC,EAAE,GAAG,UAAU,CAAC;IAC3B,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC;IAC3B,MAAM,oBAAoB,GAAQ;QAChC,GAAG,EAAE,SAAS;QACd,QAAQ,EAAE,iBAAiB;QAC3B,IAAI,EAAE,MAAM;QACZ,EAAE,EAAE,UAAU;QACd,QAAQ,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE;QACvD,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,aAAa;QACtB,UAAU,EAAE;YACV,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,CAAC;SACV;QACD,eAAe,EAAE,EAAE;QACnB,oBAAoB,EAAE,EAAE;QACxB,YAAY,EAAE,OAAO;QACrB,SAAS,EAAE,CAAC,CAAC,CAAC;KACf,CAAC;IAEF,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,qEAAqE,EAAE,GAAG,EAAE;YAC7E,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,+DAA+D,EAAE,GAAG,EAAE;YACvE,MAAM,gBAAgB,GAAG,IAAI,oBAAU,EAAE,CAAC;YAC1C,gBAAgB,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;YACnD,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"NeedParams.test.js","sourcesContent":["import NeedParams from './NeedParams';\nimport { EnergySources, Amenities } from './enums';\n\ndescribe('NeedParams class', () => {\n  const needParams = new NeedParams({\n    location: {\n      lat: 32.050382,\n      long: 34.766149,\n    },\n    startAt: 1535441613658,\n    dimensions: {\n      length: 1,\n      width: 1,\n      height: 1,\n      weight: 2,\n    },\n    batteryCapacity: 40,\n    currentBatteryCharge: 10,\n    energySource: EnergySources.Hydro,\n    amenities: [Amenities.Park],\n  });\n  needParams.id = 'TOPIC_ID';\n  needParams.davId = 'davId';\n  const serializedNeedParams: any = {\n    ttl: undefined,\n    protocol: 'vessel_charging',\n    type: 'need',\n    id: 'TOPIC_ID',\n    location: { latitude: 32.050382, longitude: 34.766149 },\n    davId: 'davId',\n    startAt: 1535441613658,\n    dimensions: {\n      length: 1,\n      width: 1,\n      height: 1,\n      weight: 2,\n    },\n    batteryCapacity: 40,\n    currentBatteryCharge: 10,\n    energySource: 'hydro',\n    amenities: [5],\n  };\n\n  describe('serialize method', () => {\n    it('should return serialized need params object with the current values', () => {\n      expect(needParams.serialize()).toEqual(serializedNeedParams);\n    });\n  });\n\n  describe('deserialize method', () => {\n    it('should return NeedParams instance with the current parameters', () => {\n      const needParamsObject = new NeedParams();\n      needParamsObject.deserialize(serializedNeedParams);\n      expect(needParamsObject).toEqual(needParams);\n    });\n  });\n});\n"]}